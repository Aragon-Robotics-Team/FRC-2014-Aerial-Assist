#include "WPILib.h"
#include <math.h>

class PID_TEST : public SimpleRobot {
	
	Joystick leftStick, rightStick;
	Talon leftMotor, rightMotor;
	Encoder leftEncoder, rightEncoder;
	PIDController leftPID, rightPID;
	DriverStationLCD* driverStation;
	
public:
	PID_TEST():
	leftStick(1),
	rightStick(2),
	leftMotor(1),
	rightMotor(2),
	leftEncoder(1),
	rightEncoder(2),
	leftPID(0.1, 0.001, 0.0, &leftEncoder, &leftMotor),	//Calibrate later
	rightPID(0.1, 0.001, 0.0, &rightEndcoder, &rightMotor){
	
	}
	
	void Autonomous() {
		leftPID.Reset();
		rightPID.Reset();
		leftPID.Enable();
		rightPID.Enable();
		leftPID.SetSetPoint(10.0);	//9.55((4pi)/12)*1200 is about 10ft
		rightPID.SetSetPoint(10.0);
		~Autonomous;
	}
	void PIDDrive() {
		leftPID.SetSetPoint((leftStick.GetY() + 1.0) * 2.5);
		rightPID.SetSetPoint((rightStick.GetY() + 1.0) * 2.5);
		Wait(0.02);
	}
	void OperatorControl() {
		while(IsOperatorControl()) {
		
			driverStation = DriverStationLCD::GetInstance();
			
			PIDDrive();	//set up to be a task
			
			driverStation->PrintfLine(MotorrStationLCD::kUser_Line1, "Maybe PID?");
			driverStation->UpdateLCD();
		}
	}
};
START_ROBOT_CLASS(PID_TEST);